import { useEffect, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import shallow from 'zustand/shallow';
import appStore, { FoodEntitie } from '../../store/app.store';

interface Props {
	position: [number, number, number];
	id: string;
}
/**
 * The apple model
 */
export default function Apple({ position, id }: Props) {
	const group = useRef<THREE.Group>();
	const foodRef = useRef<FoodEntitie | null>(null);
	// @ts-ignore
	const { nodes } = useGLTF('/apple/scene.gltf');

	// Listen for changes on the food array
	const [food] = appStore((state) => [state.food], shallow);

	// Listen for the speecific food id
	useEffect(() => {
		const localFood = food.find((f) => f.id === id);
		if (localFood) {
			foodRef.current = localFood;
		}
	}, [food, id]);

	// Loop
	useFrame(() => {
		if (!(group.current && foodRef.current)) return;
		if (!foodRef.current.available) {
			group.current.visible = false;
			foodRef.current = null;
		}
	});

	return (
		<group ref={group} dispose={null}>
			<group scale={[0.03, 0.03, 0.03]} position={position} rotation={[-Math.PI / 2, 0, 0]}>
				<group rotation={[Math.PI / 2, 0, 0]}>
					<group position={[3.86, 0, -4.23]}>
						<mesh
							castShadow
							// receiveShadow
							geometry={nodes['Sphere07_Material_#25_0'].geometry}
							material={nodes['Sphere07_Material_#25_0'].material}
						/>
					</group>
					<group name='Cylinder05' position={[3.86, 0, -4.23]}>
						<mesh
							castShadow
							// receiveShadow
							geometry={nodes['Cylinder05_Material_#25_0'].geometry}
							material={nodes['Cylinder05_Material_#25_0'].material}
						/>
					</group>
				</group>
			</group>
		</group>
	);
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: cedricmahot (https://sketchfab.com/cedricmahot)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/b496adbf9b924ff99939ad38330eb3cf
title: Apple FBX
*/
useGLTF.preload('/apple/scene.gltf');
